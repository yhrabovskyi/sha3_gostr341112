#include <stdint.h>

#define DIV          2					    /* На скільки ділимо 64-бітне слово		*/
#define FACTOR       1                                      /* На скільки ділимо смугу (число для зсуву)*/
#define NROUNDS     24					    /* К-сть раундів				*/
#define LANES       25
#define RATE_IN_BYTES 72
#define KeccakPermutationSizeInBytes 200
#define KeccakPermutationSize 1600
#define S_BIT_INTERL   2                                    /* На скільки слів ділимо смугу             */
#define DIV_OFFSET  1
#define RATE_IN_LANES 9
#define CAPACITY_IN_LANES 16


#define BYTES_FOR_LEN  1                                    /* Кількість байтів для довжини повід-ня    */

/* Макрос циклічного зсуву 32-бітного слова при використанні бітового чергування                        */
//#define ROL32(a, offset) ((offset != 0) ? ((((uint32_t)a) << offset) | (((uint32_t)a) >> (32-offset))) : a)
#define ROL32(a, offset) (((offset) != 0) ? (((a) << (offset)) | ((a) >> (32-(offset)))) : (a))

extern uint32_t state[LANES*DIV];                           /* Стан                                     */
extern uint8_t msgBlock[KeccakPermutationSizeInBytes];      /* Вх./вих. байти перед/після KeccakF()     */

/* //////////////////////////////////////////////////////////////////////////////////////////////// */
void theta(void);
void rho(void);
void pi(void);
void chi(void);
void iota(uint8_t round);
/* //////////////////////////////////////////////////////////////////////////////////////////////// */

/* //////////////////////////////////////////////////////////////////////////////////////////////// */
void KeccakF(void);
/* //////////////////////////////////////////////////////////////////////////////////////////////// */

/* //////////////////////////////////////////////////////////////////////////////////////////////// */
void stateInit(void);
void msgBlockInit(void);
/* //////////////////////////////////////////////////////////////////////////////////////////////// */

/* //////////////////////////////////////////////////////////////////////////////////////////////// */
/* Із байтів у слова (смуги; змінення послідовності бітів)                                          */
void fromBytesToWords(uint8_t * msgBlock);
/* Зі слів (смуг) у байти (змінення послідовності бітів)                                            */
void fromWordsToBytes(uint8_t * hash);
/* //////////////////////////////////////////////////////////////////////////////////////////////// */

/* //////////////////////////////////////////////////////////////////////////////////////////////// */
/* Доповнення останнього блоку                                                                      */
void padding(uint8_t tempLen);
/* //////////////////////////////////////////////////////////////////////////////////////////////// */